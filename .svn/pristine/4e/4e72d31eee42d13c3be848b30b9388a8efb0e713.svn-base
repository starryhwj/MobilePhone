# -*- coding: utf-8 -*-
from __future__ import unicode_literals
from django.db import models
from .my_enum import *


class TikTokAccount(models.Model):
    UserID = models.TextField(verbose_name='抖音UID', max_length=150, null=True)
    NickName = models.TextField(verbose_name='昵称', max_length=150, null=True)
    TikTokID = models.TextField(verbose_name='抖音号', max_length=150, null=True)
    Describe = models.TextField(verbose_name='描述', max_length=150, null=True)
    Attention = models.IntegerField(verbose_name='关注', null=False, default=0)
    Fans = models.IntegerField(verbose_name='粉丝', null=False, default=0)
    Praise = models.IntegerField(verbose_name='赞', null=False, default=0)
    Video = models.IntegerField(verbose_name='作品数', null=False, default=0)
    NumOfPraiseToOther = models.IntegerField(verbose_name='喜欢', null=False, default=0)
    ShareURL = models.TextField(verbose_name='短链接', max_length=150, null=True)
    ShowWindowExists = models.BooleanField(verbose_name='窗口是否显示', null=False, default=False)
    UpdateTime = models.DateTimeField(verbose_name='更新日期', null=True)


class Works(models.Model):
    TikTokAccountID = models.ForeignKey(TikTokAccount, verbose_name='作者', on_delete=models.CASCADE)
    ShareURL = models.TextField(verbose_name='短链接', max_length=150, null=True)
    VideoID = models.TextField(verbose_name='视频ID', max_length=150, null=True)
    NumOfPraiseGet = models.IntegerField(verbose_name='喜欢', null=False, default=0)
    NumOfComments = models.IntegerField(verbose_name='评论', null=False, default=0)
    NumOfShare = models.IntegerField(verbose_name='分享', null=False, default=0)
    UpdateTime = models.DateTimeField(verbose_name='更新日期', null=True)


class WorkClassification(models.Model):
    Name = models.TextField(verbose_name='视频分类名', max_length=150, null=False)
    Works = models.ManyToManyField(Works)


class Goods(models.Model):
    Title = models.TextField(verbose_name='标题', max_length=150, null=False)
    OutSidePlatformID = models.TextField(verbose_name='外部ID', max_length=150, null=False)
    Price = models.TextField(verbose_name='售价', max_length=150, null=True)
    Sales = models.TextField(verbose_name='销量', max_length=150, null=True)
    OutSidePlatformURL = models.TextField(verbose_name='外部URL', max_length=150, null=True)
    CreateTime = models.DateTimeField(verbose_name='创建日期', auto_now_add=True)


class GoodClassification(models.Model):
    Name = models.TextField(verbose_name='商品分类名', max_length=150, null=False)
    Goods = models.ManyToManyField(Goods)


class MobilePhone(models.Model):
    IMEI = models.TextField(verbose_name='IMEI码', max_length=150, null=False)
    TikTokAccountID = models.ForeignKey(TikTokAccount, verbose_name='作者', on_delete=models.SET_NULL, null=True)
    SysID = models.CharField(verbose_name='GUID', max_length=64, null=False)
    Enable = models.BooleanField(verbose_name='是否可用', null=False, default=False)
    StatusInfo = models.TextField(verbose_name='状态信息', max_length=150, null=True)


class Task(models.Model):
    MobilePhoneID = models.ForeignKey(MobilePhone, verbose_name='手机ID', on_delete=models.SET_NULL, null=True)
    Status = models.IntegerField(verbose_name='状态', null=False, choices=TaskStatus, default=0)
    FeedBackMessage = models.TextField(verbose_name='反馈信息', max_length=200, null=True)
    TaskType = models.IntegerField(verbose_name='类型', null=False, choices=TaskType, default=1)
    TaskData = models.TextField(verbose_name='任务信息', max_length=500, null=True)

