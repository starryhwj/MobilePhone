# Generated by Django 2.1.14 on 2019-11-15 13:57

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('Web', '0016_auto_20191114_2105'),
    ]

    operations = [
        migrations.CreateModel(
            name='CommentLibrary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Text', models.TextField(max_length=150, null=True, verbose_name='评论内容')),
                ('CreateTime', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
                ('Owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='拥有者')),
            ],
        ),
        migrations.CreateModel(
            name='FollowMission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Status', models.IntegerField(choices=[(0, '待执行'), (10, '已开始未结束'), (11, '执行失败'), (20, '已结束')], default=0, verbose_name='状态')),
                ('TikTokID', models.TextField(max_length=150, null=True, verbose_name='抖音号')),
                ('PeopleLimit', models.IntegerField(default=0, verbose_name='刷粉人数上限')),
                ('TimeLimit', models.IntegerField(default=0, verbose_name='刷粉时间上限')),
                ('Interval', models.IntegerField(default=0, verbose_name='间隔')),
            ],
        ),
        migrations.CreateModel(
            name='MaintenanceNumberMission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Status', models.IntegerField(choices=[(0, '待执行'), (10, '已开始未结束'), (11, '执行失败'), (20, '已结束')], default=0, verbose_name='状态')),
                ('VideoURL', models.TextField(max_length=150, null=True, verbose_name='视频地址')),
                ('VideoCategory', models.TextField(max_length=150, null=True, verbose_name='视频类别')),
                ('During', models.IntegerField(default=0, verbose_name='持续时间')),
            ],
        ),
        migrations.CreateModel(
            name='MutualBrushMission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Status', models.IntegerField(choices=[(0, '待执行'), (10, '已开始未结束'), (11, '执行失败'), (20, '已结束')], default=0, verbose_name='状态')),
                ('VideoURL', models.TextField(max_length=150, null=True, verbose_name='视频地址')),
                ('IsLike', models.BooleanField(default=False, verbose_name='是否点赞')),
                ('CommentText', models.TextField(max_length=150, null=True, verbose_name='评论内容')),
            ],
        ),
        migrations.CreateModel(
            name='ScanMission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Status', models.IntegerField(choices=[(0, '待执行'), (10, '已开始未结束'), (11, '执行失败'), (20, '已结束')], default=0, verbose_name='状态')),
                ('VideoURL', models.TextField(max_length=150, null=True, verbose_name='视频地址')),
                ('PeopleLimit', models.IntegerField(default=0, verbose_name='刷粉人数上限')),
                ('TimeLimit', models.IntegerField(default=0, verbose_name='刷粉时间上限')),
                ('Interval', models.IntegerField(default=0, verbose_name='间隔')),
            ],
        ),
        migrations.CreateModel(
            name='VideoMission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Status', models.IntegerField(choices=[(0, '待执行'), (10, '已开始未结束'), (11, '执行失败'), (20, '已结束')], default=0, verbose_name='状态')),
                ('VideoURL', models.TextField(max_length=150, null=True, verbose_name='视频地址')),
                ('VideoTitle', models.TextField(max_length=150, null=True, verbose_name='视频标题')),
                ('VideoKeyword', models.TextField(max_length=150, null=True, verbose_name='视频话题')),
                ('GoodURL', models.TextField(max_length=500, null=True, verbose_name='商品地址')),
                ('GoodTitle', models.TextField(max_length=150, null=True, verbose_name='商品标题')),
                ('GoodCategory', models.TextField(max_length=150, null=True, verbose_name='商品类别')),
            ],
        ),
        migrations.RemoveField(
            model_name='task',
            name='MobilePhone',
        ),
        migrations.RemoveField(
            model_name='task',
            name='Owner',
        ),
        migrations.AlterField(
            model_name='mobilephone',
            name='TikTokAccount',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Web.TikTokAccount', verbose_name='抖音账号'),
        ),
        migrations.DeleteModel(
            name='Task',
        ),
        migrations.AddField(
            model_name='videomission',
            name='MobilePhone',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Web.MobilePhone', verbose_name='手机ID'),
        ),
        migrations.AddField(
            model_name='videomission',
            name='Owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='拥有者'),
        ),
        migrations.AddField(
            model_name='scanmission',
            name='MobilePhone',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Web.MobilePhone', verbose_name='手机ID'),
        ),
        migrations.AddField(
            model_name='scanmission',
            name='Owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='拥有者'),
        ),
        migrations.AddField(
            model_name='mutualbrushmission',
            name='MobilePhone',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Web.MobilePhone', verbose_name='手机ID'),
        ),
        migrations.AddField(
            model_name='mutualbrushmission',
            name='Owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='拥有者'),
        ),
        migrations.AddField(
            model_name='maintenancenumbermission',
            name='MobilePhone',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Web.MobilePhone', verbose_name='手机ID'),
        ),
        migrations.AddField(
            model_name='maintenancenumbermission',
            name='Owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='拥有者'),
        ),
        migrations.AddField(
            model_name='followmission',
            name='MobilePhone',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Web.MobilePhone', verbose_name='手机ID'),
        ),
        migrations.AddField(
            model_name='followmission',
            name='Owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='拥有者'),
        ),
    ]
